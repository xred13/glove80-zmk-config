/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include "keys_pt.h"
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>

#define HYPER LC(LS(LG(LALT)))

// layers

#define DEFAULT 0
#define LOWER 1
#define MAGIC 2
#define FACTORY_TEST 3

/ {
    behaviors {
        // For the "layer" key, it'd nice to be able to use it as either a shift or a toggle.
        // Configure it as a tap dance, so the first tap (or hold) is a &mo and the second tap is a &to

        layer_td: tap_dance_0 {
            compatible = "zmk,behavior-tap-dance";
            label = "LAYER_TAP_DANCE";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&mo 4>, <&to 4>;
        };

        magic: magic_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "MAGIC_HOLD_TAP";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            bindings = <&mo>, <&rgb_ug_status_macro>;
        };
    };

    macros {
        rgb_ug_status_macro: rgb_ug_status_macro_0 {
            label = "RGB_UG_STATUS";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&rgb_ug RGB_STATUS>;
        };

        bt_0: bt_profile_macro_0 {
            label = "BT_0";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&out OUT_BLE &bt BT_SEL 0>;
        };

        bt_1: bt_profile_macro_1 {
            label = "BT_1";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&out OUT_BLE &bt BT_SEL 1>;
        };

        bt_2: bt_profile_macro_2 {
            label = "BT_2";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&out OUT_BLE &bt BT_SEL 2>;
        };

        bt_3: bt_profile_macro_3 {
            label = "BT_3";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&out OUT_BLE &bt BT_SEL 3>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ---------------------------------------------------------------------------------------------------------------------------------
            // |  F1   |  F2 |  F3 |  F4  |  F5  |                                                               |  F6   |  F7   |  F8  |   F9  |  F10 |
            // |  =    |  1  |  2  |  3   |  4   |  5   |                                                 |  6   |   7   |   8   |  9   |   0   |   -  |
            // |  TAB  |  Q  |  W  |  E   |  R   |  T   |                                                 |  Y   |   U   |   I   |  O   |   P   |   \  |
            // |  ESC  |  A  |  S  |  D   |  F   |  G   |                                                 |  H   |   J   |   K   |  L   |   ;   |   '  |
            // |   `   |  Z  |  X  |  C   |  V   |  B   | LSHFT | LCTRL | LOWER | | LGUI  | RCTRL | RSHFT |  N   |   M   |   ,   |  .   |   /   | PGUP |
            // | MAGIC | HOME| END | LEFT | RIGHT|      | BSPC  | DEL   | LALT  | | RALT  | RET   | SPACE |      |  UP   | DOWN  |  [   |   ]   | PGDN |

            bindings = <
&to 4           &none         &none   &none   &magic 3 0                                                                                                 &magic 3 0  &kp PRINTSCREEN  &kp INSERT  &kp F11           &kp F12
&none           &none         &kp F1  &kp F2  &kp F3      &kp F4                                                                               &kp F5    &kp F6      &kp F7           &kp F8      &kp F9            &kp F10
&none           &none         &kp N1  &kp N2  &kp N3      &kp N4                                                                               &kp N5    &kp N6      &kp N7           &kp N8      &kp N9            &none
&kp ESC         &kp CAPSLOCK  &kp Q   &kp W   &kp E       &kp R                                                                                &kp PT_Y  &kp PT_U    &kp PT_I         &kp PT_O    &kp PT_N0         &kp PG_UP
&kp LEFT_SHIFT  &kp TAB       &kp A   &kp S   &kp D       &kp F   &kp G         &kp T     &mo 2     &mo 1       &kp RIGHT_SHIFT  &kp LALT      &kp H     &kp J       &kp K            &kp L       &kp PT_C_CEDILLA  &kp PG_DN
&kp LCTRL       &kp LG(LGUI)  &kp Z   &kp X   &kp C               &kp PT_SPACE  &kp PT_V  &kp PT_B  &kp DELETE  &kp BACKSPACE    &kp KP_ENTER            &kp N       &kp M            &kp P       &kp HOME          &kp END
            >;
        };

        symbols {
            bindings = <
&kp C_BRI_DN  &kp C_BRI_UP  &kp C_PREV               &kp C_NEXT                &kp C_PP                                                                                                                             &kp C_MUTE                          &kp C_VOL_DN                       &kp C_VOL_UP          &none  &kp PAUSE_BREAK
&none         &none         &kp PT_PIPE              &none                     &none               &none                                                                                           &none            &none                               &none                              &none                 &none  &none
&none         &none         &kp PT_LEFT_BRACE        &kp PT_RIGHT_BRACE        &kp LESS_THAN       &kp PT_GREATER_THAN                                                                             &kp PT_MINUS     &kp PT_PLUS                         &kp PT_ACUTE                       &kp PT_GRAVE          &none  &none
&none         &none         &kp PT_LEFT_BRACKET      &kp RIGHT_BRACKET         &kp PT_BACKSLASH    &kp PT_SLASH                                                                                    &kp PT_ASTERISK  &kp PT_EQUAL                        &kp PT_TILDE                       &kp PT_CARET          &none  &none
&none         &none         &kp PT_LEFT_PARENTHESIS  &kp PT_RIGHT_PARENTHESIS  &kp PT_EXCLAMATION  &kp PT_QUESTION      &kp PT_SEMICOLON  &kp PT_COLON   &none  &none        &none          &none  &kp PT_PERCENT   &kp PT_UNDERSCORE                   &kp PT_SQT                         &kp PT_DOUBLE_QUOTES  &none  &none
&none         &none         &kp PT_AT                &kp PT_AMPERSAND          &kp PT_POUND                             &kp PT_COMMA      &kp PT_PERIOD  &none  &kp PT_EURO  &kp PT_DOLLAR  &none                   &kp PT_MASCULINE_ORDINAL_INDICATOR  &kp PT_FEMININE_ORDINAL_INDICATOR  &none                 &none  &none
            >;
        };

        numbers {
            bindings = <
&none  &none  &none   &none   &none                                                            &none     &none     &none      &none  &none
&none  &none  &none   &none   &none   &none                                             &none  &none     &none     &none      &none  &none
&none  &none  &kp N1  &kp N2  &kp N3  &kp N4                                            &none  &none     &none     &none      &none  &none
&none  &none  &kp N5  &kp N6  &kp N7  &kp N8                                            &none  &none     &kp UP    &none      &none  &none
&none  &none  &kp N9  &kp N0  &none   &none   &none  &none  &none  &none  &none  &none  &none  &kp LEFT  &kp DOWN  &kp RIGHT  &none  &none
&none  &none  &none   &none   &none           &none  &none  &none  &none  &none  &none         &none     &none     &none      &none  &none
            >;
        };

        magic_layer {
            bindings = <
&bt BT_CLR   &none            &none            &none            &none                                                                                     &none  &none  &none  &none  &bt BT_CLR_ALL
&none        &none            &none            &none            &none            &none                                                             &none  &none  &none  &none  &none  &none
&none        &rgb_ug RGB_SPI  &rgb_ug RGB_SAI  &rgb_ug RGB_HUI  &rgb_ug RGB_BRI  &rgb_ug RGB_TOG                                                   &none  &none  &none  &none  &none  &none
&bootloader  &rgb_ug RGB_SPD  &rgb_ug RGB_SAD  &rgb_ug RGB_HUD  &rgb_ug RGB_BRD  &rgb_ug RGB_EFF                                                   &none  &none  &none  &none  &none  &bootloader
&sys_reset   &none            &none            &none            &none            &none            &bt_2  &bt_3  &none         &none  &none  &none  &none  &none  &none  &none  &none  &sys_reset
&none        &none            &none            &none            &none                             &bt_0  &bt_1  &out OUT_USB  &none  &none  &none         &none  &none  &none  &none  &to 0
            >;
        };

        battlefield {
            bindings = <
&to 0           &none         &none   &none   &magic 3 0                                                                                                 &magic 3 0  &kp PRINTSCREEN  &kp INSERT  &kp F11           &kp F12
&none           &none         &kp F1  &kp F2  &kp F3      &kp F4                                                                               &kp F5    &kp F6      &kp F7           &kp F8      &kp F9            &kp F10
&none           &none         &kp N1  &kp N2  &kp N3      &kp N4                                                                               &kp N5    &kp N6      &kp N7           &kp N8      &kp N9            &none
&kp ESC         &kp CAPSLOCK  &kp Q   &kp W   &kp E       &kp R                                                                                &kp PT_Y  &kp PT_U    &kp UP           &kp PT_O    &kp PT_N0         &kp PG_UP
&kp LEFT_SHIFT  &kp TAB       &kp A   &kp S   &kp D       &kp F   &kp G         &kp T     &mo 2     &mo 1       &kp RIGHT_SHIFT  &kp LALT      &kp H     &kp LEFT    &kp DOWN         &kp RIGHT   &kp PT_C_CEDILLA  &kp PG_DN
&kp LCTRL       &kp LG(LGUI)  &kp Z   &kp X   &kp C               &kp PT_SPACE  &kp PT_V  &kp PT_B  &kp DELETE  &kp BACKSPACE    &kp KP_ENTER            &kp N       &kp M            &kp P       &kp HOME          &kp END
            >;
        };
    };
};
